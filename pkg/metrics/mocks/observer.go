// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/prometheus/client_golang/prometheus (interfaces: Observer)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockObserver is a mock of Observer interface
type MockObserver struct {
	ctrl     *gomock.Controller
	recorder *MockObserverMockRecorder
}

// MockObserverMockRecorder is the mock recorder for MockObserver
type MockObserverMockRecorder struct {
	mock *MockObserver
}

// NewMockObserver creates a new mock instance
func NewMockObserver(ctrl *gomock.Controller) *MockObserver {
	mock := &MockObserver{ctrl: ctrl}
	mock.recorder = &MockObserverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockObserver) EXPECT() *MockObserverMockRecorder {
	return _m.recorder
}

// Observe mocks base method
func (_m *MockObserver) Observe(_param0 float64) {
	_m.ctrl.Call(_m, "Observe", _param0)
}

// Observe indicates an expected call of Observe
func (_mr *MockObserverMockRecorder) Observe(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Observe", reflect.TypeOf((*MockObserver)(nil).Observe), arg0)
}
